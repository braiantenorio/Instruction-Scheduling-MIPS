
import java.util.List;
import java.util.ArrayList;
import java_cup.runtime.*;


parser code {:

  private List<Instruction> instructionList = new ArrayList<>();

  public List<Instruction> getInstructionList() {
    return instructionList;
  }

  // Método para agregar una nueva instrucción a la lista
  private void addInstruction(String opcode, String line, List<String> readRegisters, List<String> writeRegisters) {
    Instruction instruction = new Instruction(opcode, line, readRegisters, writeRegisters);
    instructionList.add(instruction);
  }

:}

terminal ROPCODE; 
terminal JOPCODE; 
terminal IOPCODE;
terminal IMOPCODE; 
terminal REGISTER; 
terminal IMMEDIATE; 
terminal OBRACKET; 
terminal CBRACKET;
terminal EOL; // tal vez lo tratamos distinto despues 


non terminal test;


/* Definición de la gramática */



start with test;


test ::=        ROPCODE
          |	    JOPCODE
          ;



/*
instructionList ::= instructionList:i instruction:instr
{
  i.add(instr);
};

instruction ::= opcode:op line:ln readRegisters:reads writeRegisters:writes ';'
{
  addInstruction(op, ln, reads, writes);
};
*/